datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum LocationTagType {
  ADDRESS
  CITY
  COUNTY
  STATE
  NATION
}

enum BusinessType {
  BUSINESS
  CATEGORY
}

enum PerformanceType {
  BRAND
  CATEGORY
  OVERALL
  ADDRESS
  CITY
  STATE
}

enum ReviewTag {
  PERFORMANCE
  NEWS
  OWNERSHIP
  COVERAGE
}

model LocationTag {
  id     String          @default(cuid()) @id
  type   LocationTagType
  params String
}

model BusinessTag {
  id     String       @default(cuid()) @id
  type   BusinessType
  params String
}

model User {
  id           String      @default(cuid()) @id
  email        String      @unique
  avatar       String?
  password     String
  firstName    String
  lastName     String
  company      String
  title        String?
  description  String?
  address      String?
  searchLog    SearchLog[]
  pendingEmail Boolean     @default(false)
  createdAt    DateTime    @default(now())
}

model UserSession {
  id        String   @default(cuid()) @id
  token     String
  createdAt DateTime @default(now())
  user      User
}

model UserRegisterVerification {
  id         String  @default(cuid()) @id
  email      String
  userInput  String
  verified   Boolean @default(false)
  tokenEmail String
  tokenQuery String
}

model UserEmailVerification {
  id         String  @default(cuid()) @id
  email      String
  user       User
  verified   Boolean @default(false)
  tokenEmail String
}

model PerformanceData {
  id          String @default(cuid()) @id
  name        String
  avgRating   String
  totalSales  String
  numReview   Int
  numLocation Int?
}

model ComparePerformanceData {
  id          String @default(cuid()) @id
  name        String
  avgRating   String
  totalSales  String
  numReview   Int
  numLocation Int?
}

model ComparationTag {
  id          String        @default(cuid()) @id
  locationTag LocationTag?
  businessTag BusinessTag?
  performance Performance[]
  news        News[]
}

model Performance {
  id              String                   @default(cuid()) @id
  type            PerformanceType
  locationTag     LocationTag?
  businessTag     BusinessTag?
  comparationTags ComparationTag[]
  data            PerformanceData[]
  compareData     ComparePerformanceData[]
  createdAt       DateTime                 @default(now())
  updatedAt       DateTime                 @updatedAt
}

model NewsData {
  id          String @default(cuid()) @id
  title       String
  link        String
  published   String
  source      String
  description String
  relevance   Float
}

model CompareNewsData {
  id          String @default(cuid()) @id
  title       String
  link        String
  published   String
  source      String
  description String
  relevance   Float
}

model News {
  id              String            @default(cuid()) @id
  locationTag     LocationTag?
  businessTag     BusinessTag?
  comparationTags ComparationTag[]
  data            NewsData[]
  compareData     CompareNewsData[]
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
}

model SearchLog {
  id          String       @default(cuid()) @id
  locationTag LocationTag?
  businessTag BusinessTag?
  reviewTag   ReviewTag?
  createdAt   DateTime     @default(now())
}

model ActivityTimes {
  id   String @default(cuid()) @id
  AM1  Int?
  AM2  Int?
  AM3  Int?
  AM4  Int?
  AM5  Int?
  AM6  Int?
  AM7  Int?
  AM8  Int?
  AM9  Int?
  AM10 Int?
  AM11 Int?
  PM12 Int?
  PM1  Int?
  PM2  Int?
  PM3  Int?
  PM4  Int?
  PM5  Int?
  PM6  Int?
  PM7  Int?
  PM8  Int?
  PM9  Int?
  PM10 Int?
  PM11 Int?
  AM12 Int?
}

model ActivityData {
  id           String        @default(cuid()) @id
  name         String
  location     String
  activityData ActivityTimes
}

model CompareActivityData {
  id           String        @default(cuid()) @id
  name         String
  location     String
  activityData ActivityTimes
}

model Activity {
  id              String                @default(cuid()) @id
  locationTag     LocationTag?
  businessTag     BusinessTag?
  comparationTags ComparationTag[]
  data            ActivityData[]
  compareData     CompareActivityData[]
  createdAt       DateTime              @default(now())
  updatedAt       DateTime              @updatedAt
}

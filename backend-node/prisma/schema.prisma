datasource db {
  provider = "postgresql"
  url      = "postgres://tfmnjwyjgfjfua:d8ce0a348958b0d0c486088a7998cb65ce633783822a167e5536150411473943@ec2-34-194-198-176.compute-1.amazonaws.com:5432/df62bp2hpll710"
}

generator client {
  provider = "prisma-client-js"
}

enum LocationTagType {
  ADDRESS
  STATE
  NATION
}

enum TargetObjectTagType {
  BUSSINESS
  CATEGORY
}

enum PerformanceType {
  LOCATION
  STATE
  OVERALL
  BY_ADDRESS
}

model LocationTag {
  id     String          @default(cuid()) @id
  type   LocationTagType
  params String
}

model TargetObjectTag {
  id     String          @default(cuid()) @id
  type   TargetObjectTagType
  params String
}

model User {
  id            String   @default(cuid()) @id
  email         String   @unique
  avatar        String?
  password      String
  firstName     String
  lastName      String
  company       String
  title         String?
  description   String?
  address       String?
  pendingEmail  Boolean  @default(false)
  createdAt     DateTime @default(now())
}

model UserSession {
  id        String   @default(cuid()) @id
  token     String
  createdAt DateTime @default(now())
  user      User
}

model UserRegisterVerification {
  id            String  @default(cuid()) @id
  email         String
  userInput     String
  verified      Boolean @default(false)
  tokenEmail    String
  tokenQuery    String
}

model UserEmailVerification {
  id         String  @default(cuid()) @id
  email      String
  user       User
  verified   Boolean @default(false)
  tokenEmail String
}

model PerformanceData {
  id            String          @default(cuid()) @id
  name          String
  avgRating     String
  totalSales    String
  numReview     Int
  numLocation   Int? 
}

model Performance {
  id              String          @default(cuid()) @id
  type            PerformanceType
  locationTag     LocationTag?
  targetObjectTag TargetObjectTag?
  data            PerformanceData[]
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}
